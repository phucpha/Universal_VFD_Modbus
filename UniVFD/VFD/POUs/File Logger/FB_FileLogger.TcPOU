<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="FB_FileLogger" Id="{5ad0cbea-655d-4241-a1f8-425083b46620}" SpecialFunc="None">
    <Declaration><![CDATA[(* 
:Description: This function block allows to log the data to txt file
*)
FUNCTION_BLOCK FB_FileLogger IMPLEMENTS I_FileLogger
VAR CONSTANT
	iBUFFER_SIZE : UINT := 255;
END_VAR
VAR
	sName : STRING;
	
	(* First cycle bits used for selecting file logging mode *)
	bAddTimeStamp				: BOOL;
	bAddHeader					: BOOL;
	
	(* Internal status *)
	bActive 					: BOOL;						(*  *)
	bBusy						: BOOL;						(*  *)
	bError						: BOOL;						(*  *)
	iErrorID					: UDINT;					(*  *)
	
	eFileLoggerState 			: E_FileLoggerState;		(*  *)
	eFileLoggerInitState 		: E_FileLoggerInitState;	(*  *)
	eFileLoggerAddLogsState		: E_FileLoggerAddLogsState; (*  *)
	eFileLoggerSetNewPathState 	: E_FileLoggerSetNewPathState;
	
	(* Internal parameters *)
	sFileName 					: STRING;					(*  *)
	sFileDir					: STRING;					(*  *)
	sFilePath					: STRING;					(*  *)
	
	hFile						: UINT;						(*  *)
	sAmsNetId					: T_AmsNetID;				(*  *)
	stTime						: TIMESTRUCT;				(*  *)
	sTime						: STRING;					(*  *)
	sFileDate					: STRING;									(*  *)
	sLogMessage					: STRING;									(*  *)
	
	(* Buffer arrays *)
	iCurrentBufferLine			: UINT := 1;								(*  *)
	iCurrentBufferLineForFile	: UINT := 1;								(*  *)
	arrMessageBuffer 			: ARRAY [1..iBUFFER_SIZE] OF STRING(300);	(*  *)
	arrMessageBufferPresence	: ARRAY [1..iBUFFER_SIZE] OF BOOL(255);		(*  *)
	
	(* Function blocks - time handling*)
	//fbGetTime					: NT_GetTime;				(*  *)
	
	(* Function blocks - file handling *)
	fbFileOpen					: FB_FileOpen;				(*  *)
	fbFileClose					: FB_FileClose;				(*  *)
	fbCreateDir					: FB_CreateDir;				(*  *)
	fbFilePuts					: FB_FilePuts;				(*  *)
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[bActive := eFileLoggerState >= FILE_LOGGER_READY;

IF fbMachineTime.bValid THEN
	stTime := fbMachineTime.systemTime;
	sTime := SYSTEMTIME_TO_STRING(stTime);
	
END_IF

StateMachine();]]></ST>
    </Implementation>
    <Folder Name="FirstCycle" Id="{3d7c3df8-a02c-4632-9b4f-600157e51820}" />
    <Folder Name="Internal" Id="{677d4011-7e3f-47f8-be1c-d68139a26870}" />
    <Folder Name="Properties" Id="{86effe42-7947-442c-bbf5-e5cbb3e12a52}">
      <Folder Name="Parameters" Id="{6e7b285b-03a6-4496-b9d5-62e27e1a320a}" />
      <Folder Name="Status" Id="{656676f0-1013-475b-ad98-62fc9a8eaab3}" />
    </Folder>
    <Folder Name="Requests" Id="{5c4b3317-e975-452a-8b8e-885fcd37c9e6}" />
    <Folder Name="StateMachine" Id="{0ae5d64a-e802-4a51-be15-5047bb1cd444}" />
    <Property Name="Active" Id="{68ee4ceb-b0b5-4544-a166-6f570644d20b}" FolderPath="Properties\Status\">
      <Declaration><![CDATA[PROPERTY Active : REFERENCE TO BOOL
]]></Declaration>
      <Get Name="Get" Id="{0b8e58c5-a4de-4dc0-8ec0-fa5cc21507c2}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Active REF= bActive;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="AmsNetId" Id="{32adba9b-e44d-482b-95d8-91519f620cd4}" FolderPath="Properties\Parameters\">
      <Declaration><![CDATA[PROPERTY AmsNetId : STRING]]></Declaration>
      <Get Name="Get" Id="{d3ad4494-5a6e-4e11-b973-aebf49d62521}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[AmsNetID := sAmsNetId;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{51bca7eb-0971-4955-91d9-7717209063d2}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[sAmsNetId := AmsNetId;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Property Name="Busy" Id="{687a8547-e55c-48b7-9f56-e0d843c2f4ce}" FolderPath="Properties\Status\">
      <Declaration><![CDATA[PROPERTY Busy : REFERENCE TO BOOL
]]></Declaration>
      <Get Name="Get" Id="{3d982172-8c1a-49f8-b57d-863b054c4964}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Busy REF= bBusy;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="Error" Id="{da746dad-1602-4a9e-b81f-03189b4eb9a9}" FolderPath="Properties\Status\">
      <Declaration><![CDATA[PROPERTY Error : REFERENCE TO BOOL
]]></Declaration>
      <Get Name="Get" Id="{b05c7773-deaf-4881-a79e-5256802f6113}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Error REF= bError;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="ErrorID" Id="{94845ebf-176e-4701-946b-f3173952c32c}" FolderPath="Properties\Status\">
      <Declaration><![CDATA[PROPERTY ErrorID : REFERENCE TO UDINT
]]></Declaration>
      <Get Name="Get" Id="{743f855e-29be-48f6-8f34-ac08caa835e5}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[ErrorID REF= iErrorID;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="FileDir" Id="{f6dea9e5-90ef-4a62-b4b0-90d9008bff6b}" FolderPath="Properties\Parameters\">
      <Declaration><![CDATA[PROPERTY FileDir : STRING]]></Declaration>
      <Get Name="Get" Id="{0da7a429-7e7a-4e2d-9375-9b587474852b}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[FileDir := sFileDir;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{04c1939f-6172-4719-81d7-87a18a0b45d8}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[sFileDir := FileDir;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Property Name="FileName" Id="{0b3ac4ec-20d7-45c0-b0f8-cf1903b2d755}" FolderPath="Properties\Parameters\">
      <Declaration><![CDATA[PROPERTY FileName : STRING]]></Declaration>
      <Get Name="Get" Id="{7a1ba40a-4ce4-45e9-8b85-59ffa253fbed}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[FileName := sFileName;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{d5f7dced-1ec7-4249-9d91-8d1e5217756d}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[sFileName := FileName;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Method Name="M_ResetParameters" Id="{a6b3e1a7-0224-4d66-96aa-3637b07d2316}" FolderPath="Internal\">
      <Declaration><![CDATA[METHOD M_ResetParameters : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fbCreateDir( bExecute := FALSE);
fbFileOpen( bExecute := FALSE);
fbFilePuts( bExecute := FALSE);
fbFileClose( bExecute := FALSE);

FOR iCurrentBufferLine := 1 TO iBUFFER_SIZE BY 1 DO
	MEMSET(ADR(arrMessageBuffer[iCurrentBufferLine]),0,SIZEOF(arrMessageBuffer[iCurrentBufferLine]));
	arrMessageBufferPresence[iCurrentBufferLine] := FALSE;
END_FOR

iCurrentBufferLine := 1;
iCurrentBufferLineForFile := 1;

bError 		:= FALSE;
iErrorID 	:= 0;

MEMSET(ADR(sLogMessage),0,SIZEOF(sLogMessage));

eFileLoggerInitState := 0;
eFileLoggerAddLogsState := 0;

]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_SetNewPath" Id="{7bfcd0a8-205b-4adb-b230-2bf5086e0d0d}" FolderPath="Internal\">
      <Declaration><![CDATA[METHOD M_SetNewPath : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[CASE eFileLoggerSetNewPathState OF
	FILE_LOGGER_SET_NEW_PATH_CHANGE_PATH:
		M_SetNewPath := FALSE;
		sFilePath := CONCAT(STR1 := sFileDir, STR2 := sFileName);
		
		eFileLoggerSetNewPathState := FILE_LOGGER_SET_NEW_PATH_DONE;
	
	FILE_LOGGER_SET_NEW_PATH_DONE:
		M_SetNewPath := TRUE;
		eFileLoggerSetNewPathState := FILE_LOGGER_SET_NEW_PATH_CHANGE_PATH;
			
END_CASE
]]></ST>
      </Implementation>
    </Method>
    <Method Name="MR_Abort" Id="{2cc27a97-3cda-4c6e-b044-f1f249e27e4c}" FolderPath="Requests\">
      <Declaration><![CDATA[METHOD MR_Abort : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF eFileLoggerState >= FILE_LOGGER_READY THEN
	bBusy := TRUE;
	MR_Abort := FALSE;
	eFileLoggerState := FILE_LOGGER_ABORTING;
	
ELSIF eFileLoggerState = FILE_LOGGER_UNINITIALIZED THEN
	bBusy := FALSE;
	MR_Abort := TRUE;
	
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="MR_AddLogs" Id="{4fec2366-2065-4468-85c4-403a48a95557}" FolderPath="Requests\">
      <Declaration><![CDATA[METHOD MR_AddLogs : BOOL
VAR_INPUT
	sLogMessage 	: STRING;		
	
END_VAR
VAR
	sCurrentTime 	: STRING;
	sCurrentDate	: STRING;
	sLog			: STRING(300);
	
END_VAR

]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF iCurrentBufferLine >= iBUFFER_SIZE THEN	
	iCurrentBufferLine := 1;
		
ELSE
	sCurrentDate := LEFT(sTime,10);
	sCurrentTime := RIGHT(sTime,12);
	MEMSET(ADR(sLog),0,SIZEOF(sLog));
	
	IF bAddTimeStamp THEN
		sLog := FUN_MergeStrings6(sCurrentDate,'$t',sCurrentTime,'$t',sLogMessage,'$n'); 
	ELSE
		sLog := CONCAT(sLogMessage,'$n'); 
	END_IF
	
	MEMSET(ADR(arrMessageBuffer[iCurrentBufferLine]),0,SIZEOF(arrMessageBuffer[iCurrentBufferLine]));
	arrMessageBuffer[iCurrentBufferLine] := sLog;
	iCurrentBufferLine := iCurrentBufferLine + 1;
	
	MR_AddLogs := TRUE;
	
END_IF

]]></ST>
      </Implementation>
    </Method>
    <Method Name="MR_FirstCycle" Id="{2cb6b11c-094f-4f71-ab47-fe2fb961d8f5}" FolderPath="FirstCycle\">
      <Declaration><![CDATA[METHOD MR_FirstCycle : BOOL
VAR_INPUT
	sName 			: STRING;
	sFileDir		: STRING(255);
	sFileName		: STRING(255);
	sAmsNetId		: T_AmsNetID;
	bAddTimeStamp	: BOOL;
	bAddHeader		: BOOL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[THIS^.sName := sName;
THIS^.sFileDir := sFileDir;
THIS^.sFileName := sFileName;
THIS^.sAmsNetId := sAmsNetId;
THIS^.bAddTimeStamp := bAddTimeStamp;
THIS^.bAddHeader := bAddHeader;

M_SetNewPath();]]></ST>
      </Implementation>
    </Method>
    <Method Name="MR_Init" Id="{bb7207fb-d4a1-4acb-9898-7ec19df364d1}" FolderPath="Requests\">
      <Declaration><![CDATA[METHOD MR_Init : BOOL
VAR_INPUT
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF eFileLoggerState = FILE_LOGGER_UNINITIALIZED THEN
	bBusy := TRUE;
	MR_Init := FALSE;
	eFileLoggerState := FILE_LOGGER_INITIALIZING;
	
ELSIF eFileLoggerState >= FILE_LOGGER_READY THEN
	bBusy := FALSE;
	MR_Init := TRUE;
	
END_IF
]]></ST>
      </Implementation>
    </Method>
    <Method Name="MR_Reset" Id="{269b19f3-0f74-4c4b-9f01-508a3543d3df}" FolderPath="Requests\">
      <Declaration><![CDATA[METHOD MR_Reset : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF eFileLoggerState >= FILE_LOGGER_IDLE AND eFileLoggerState <> FILE_LOGGER_METHOD_DONE THEN
	bBusy := TRUE;
	MR_Reset := FALSE;
	eFileLoggerState := FILE_LOGGER_RESET;	

ELSIF eFileLoggerState = FILE_LOGGER_METHOD_DONE THEN
	bBusy := FALSE;
	MR_Reset := TRUE;

END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="MR_SelectPath" Id="{a9b31a0c-3e52-43e4-93f5-6423a242f409}" FolderPath="Requests\">
      <Declaration><![CDATA[METHOD MR_SelectPath : BOOL
VAR_INPUT
	sFileDir								: STRING; 			(* CSV source file directory name *)
	sFileName 								: STRING; 			(* CSV source file name *)
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF eFileLoggerState = FILE_LOGGER_IDLE THEN
	THIS^.sFileDir := sFileDir;	
	THIS^.sFileName := sFileName;	
	bBusy := TRUE;
	MR_SelectPath := FALSE;
	eFileLoggerState := FILE_LOGGER_SELECT_PATH;
	
ELSIF eFileLoggerState = FILE_LOGGER_METHOD_DONE THEN
	bBusy := FALSE;
	MR_SelectPath := TRUE;
	
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="MS_Aborting" Id="{7a80d76d-dbb3-4c38-ae0e-fa76273ebe9e}" FolderPath="StateMachine\">
      <Declaration><![CDATA[METHOD PROTECTED MS_Aborting
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fbCreateDir( bExecute := FALSE);
fbFileOpen( bExecute := FALSE);
fbFilePuts( bExecute := FALSE);
fbFileClose( bExecute := FALSE);
//fbGetTime( START := FALSE);

FOR iCurrentBufferLine := 1 TO iBUFFER_SIZE BY 1 DO
	MEMSET(ADR(arrMessageBuffer[iCurrentBufferLine]),0,SIZEOF(arrMessageBuffer[iCurrentBufferLine]));
	arrMessageBufferPresence[iCurrentBufferLine] := FALSE;
	
END_FOR

iCurrentBufferLine := 1;
iCurrentBufferLineForFile := 1;

MEMSET(ADR(sTime),0,SIZEOF(sTime));
MEMSET(ADR(sFileDate),0,SIZEOF(sFileDate));
MEMSET(ADR(sLogMessage),0,SIZEOF(sLogMessage));

stTime.wDay 			:= 0;
stTime.wDayOfWeek 		:= 0;
stTime.wHour 			:= 0;
stTime.wMilliseconds 	:= 0;
stTime.wMinute 			:= 0;
stTime.wMonth 			:= 0;
stTime.wSecond 			:= 0;
stTime.wYear 			:= 0;

bActive		:= FALSE;
bBusy 		:= FALSE;
bError 		:= FALSE;
iErrorID 	:= 0;

eFileLoggerInitState := FILE_LOGGER_INIT_GET_TIME;
eFileLoggerAddLogsState := FILE_LOGGER_ADD_LOGS_OPEN;
eFileLoggerState := FILE_LOGGER_UNINITIALIZED;]]></ST>
      </Implementation>
    </Method>
    <Method Name="MS_AddLogs" Id="{69a5aa47-d310-4ce0-a37b-b6b39405f453}" FolderPath="StateMachine\">
      <Declaration><![CDATA[METHOD PROTECTED MS_AddLogs
]]></Declaration>
      <Implementation>
        <ST><![CDATA[CASE eFileLoggerAddLogsState OF
	FILE_LOGGER_ADD_LOGS_OPEN:
		IF NOT fbFileOpen.bError THEN
			fbFileOpen( sNetId 		:= sAmsNetId,
						sPathName 	:= FUN_MergeStrings4(sStr1 := sFilePath,'_',LEFT(sTime,10),'.txt'),
						bExecute 	:= TRUE,
						tTimeout	:= DEFAULT_ADS_TIMEOUT,
						nMode		:= FOPEN_MODEAPPEND OR FOPEN_MODEPLUS);
							
			IF NOT fbFileOpen.bBusy THEN
				fbFileOpen(bExecute := FALSE);				
				hFile := fbFileOpen.hFile;;
				eFileLoggerAddLogsState := FILE_LOGGER_ADD_LOGS_WRITTE;
			
			END_IF
		ELSE
			fbFileOpen( bExecute := FALSE);
			bError := fbFileOpen.bError;
			iErrorID := fbFileOpen.nErrId;

		END_IF
	

	FILE_LOGGER_ADD_LOGS_WRITTE:
		IF NOT fbFilePuts.bError THEN
			fbFilePuts( sNetId		:= sAmsNetId,
						hFile 		:= hFile,
						sLine 		:= arrMessageBuffer[iCurrentBufferLineForFile],
						bExecute 	:= TRUE,
						tTimeout 	:= DEFAULT_ADS_TIMEOUT);	
					
			IF NOT fbFilePuts.bBusy THEN				
				eFileLoggerAddLogsState := FILE_LOGGER_ADD_LOGS_WRITTE_DONE;
				
			END_IF
			
		ELSE
			fbFilePuts( bExecute := FALSE);
			bError := fbFilePuts.bError;
			iErrorID := fbFilePuts.nErrId;
			
		END_IF	

		
	FILE_LOGGER_ADD_LOGS_WRITTE_DONE:
		fbFilePuts( bExecute := FALSE);	
		iCurrentBufferLineForFile := iCurrentBufferLineForFile + 1;	
		
		IF iCurrentBufferLineForFile >= iBUFFER_SIZE THEN
			iCurrentBufferLineForFile := 1;
		ELSIF iCurrentBufferLineForFile < iCurrentBufferLine THEN
			eFileLoggerAddLogsState := FILE_LOGGER_ADD_LOGS_WRITTE;
		ELSIF iCurrentBufferLineForFile >= iCurrentBufferLine THEN
			eFileLoggerAddLogsState := FILE_LOGGER_ADD_LOGS_CLOSE;
		END_IF;

	
	FILE_LOGGER_ADD_LOGS_CLOSE:
		IF NOT fbFileClose.bError THEN
			fbFileClose(	sNetId := sAmsNetId,
							hFile := hFile,
							bExecute := TRUE,
							tTimeout := DEFAULT_ADS_TIMEOUT);
							
			IF NOT fbFileClose.bBusy THEN
				fbFileClose( bExecute := FALSE);
				eFileLoggerAddLogsState := FILE_LOGGER_ADD_LOGS_OPEN;
				eFileLoggerState := FILE_LOGGER_IDLE;

			END_IF
		ELSE
			bError := fbFileClose.bError;
			iErrorID := fbFileClose.nErrId;
			fbFileClose( bExecute := FALSE);
			
		END_IF
		
END_CASE]]></ST>
      </Implementation>
    </Method>
    <Method Name="MS_Idle" Id="{22f5632a-e740-40e8-8d7d-4e0ec505e8ac}" FolderPath="StateMachine\">
      <Declaration><![CDATA[METHOD PROTECTED MS_Idle
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF iCurrentBufferLineForFile < iCurrentBufferLine THEN
	eFileLoggerState := FILE_LOGGER_ADD_LOGS;

END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="MS_Initializing" Id="{63849717-65dc-4935-8c22-48a6e0bf881b}" FolderPath="StateMachine\">
      <Declaration><![CDATA[METHOD PROTECTED MS_Initializing //C:\TwinCAT\log\filelog.txt
]]></Declaration>
      <Implementation>
        <ST><![CDATA[CASE eFileLoggerInitState OF
	FILE_LOGGER_INIT_CREATE_DIR:
		fbCreateDir(sNetId 		:= sAmsNetId,
					sPathName 	:= sFileDir,
					bExecute 	:= TRUE,
					tTimeout 	:= DEFAULT_ADS_TIMEOUT);
					
		IF NOT fbCreateDir.bBusy THEN
			eFileLoggerInitState := FILE_LOGGER_INIT_GET_TIME;
			fbCreateDir( bExecute := FALSE);
			
		END_IF
		
	FILE_LOGGER_INIT_GET_TIME:
		IF fbMachineTime.bValid THEN
			stTime := fbMachineTime.systemTime;
			sTime := SYSTEMTIME_TO_STRING(stTime);
			sFileDate := LEFT(sTime,10);
			eFileLoggerInitState := FILE_LOGGER_INIT_CREATE_FILE;
			
		END_IF
		
	FILE_LOGGER_INIT_CREATE_FILE:
		IF NOT fbFileOpen.bError THEN
			fbFileOpen( sNetId 		:= sAmsNetId,
						sPathName 	:= FUN_MergeStrings4(sFilePath,'_',LEFT(sTime,10),'.txt'),
						bExecute 	:= TRUE,
						tTimeout	:= DEFAULT_ADS_TIMEOUT,
						nMode		:= FOPEN_MODEAPPEND OR FOPEN_MODEPLUS);
							
			IF NOT fbFileOpen.bBusy THEN
				hFile := fbFileOpen.hFile;
				fbFileOpen(bExecute := FALSE);		
				
				IF bAddHeader THEN 
					eFileLoggerInitState := FILE_LOGGER_INIT_ADD_HEADER;
					
				ELSE
					eFileLoggerInitState := FILE_LOGGER_INIT_CLOSE_FILE;
					
				END_IF							
			END_IF
		ELSE
			bError := fbFileOpen.bError;
			iErrorID := fbFileOpen.nErrId;
			fbFileOpen( bExecute := FALSE);
			
		END_IF
		
	FILE_LOGGER_INIT_ADD_HEADER:
	
		IF NOT fbFilePuts.bError THEN
			fbFilePuts(	sNetId := sAmsNetId,
						hFile := hFile,
						sLine := CONCAT('----- Logger file initialized at ',CONCAT(LEFT(sTime,23),' ----- $n')),
						bExecute := TRUE,
						tTimeout := DEFAULT_ADS_TIMEOUT);

			IF NOT fbFilePuts.bBusy THEN
				eFileLoggerInitState := FILE_LOGGER_INIT_CLOSE_FILE;
				fbFilePuts( bExecute := FALSE);
				
			END_IF	
		ELSE
			bError := fbFilePuts.bError;
			iErrorID := fbFilePuts.nErrId;
			fbFilePuts( bExecute := FALSE);
			
		END_IF
	
	FILE_LOGGER_INIT_CLOSE_FILE:
		IF NOT fbFileClose.bError THEN
			fbFileClose( sNetId 		:= sAmsNetId,
							hFile 		:= hFile,
							bExecute 	:= TRUE,
							tTimeout 	:= DEFAULT_ADS_TIMEOUT);
							
			IF NOT fbFileClose.bBusy THEN
				eFileLoggerInitState := FILE_LOGGER_INIT_DONE;
				fbFileClose( bExecute := FALSE);
				
			END_IF
		ELSE
			bError := fbFileClose.bError;
			iErrorID := fbFileClose.nErrId;
			fbFileClose( bExecute := FALSE);
			
		END_IF
	
	FILE_LOGGER_INIT_DONE:
		eFileLoggerInitState := FILE_LOGGER_INIT_CREATE_DIR;
		eFileLoggerState := FILE_LOGGER_IDLE;
		
END_CASE]]></ST>
      </Implementation>
    </Method>
    <Method Name="MS_MethodDone" Id="{8581cd71-e42b-4cf4-bae0-6bc9841dd397}" FolderPath="StateMachine\">
      <Declaration><![CDATA[METHOD PROTECTED MS_MethodDone
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT bBusy THEN
	eFileLoggerState := FILE_LOGGER_IDLE;

END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="MS_Ready" Id="{01c70be9-8911-41ad-b87f-6596e652d74f}" FolderPath="StateMachine\">
      <Declaration><![CDATA[METHOD PROTECTED MS_Ready
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[eFileLoggerState := FILE_LOGGER_IDLE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="MS_Reset" Id="{0c823b12-ef6c-409a-9d5d-cc4a751aac33}" FolderPath="StateMachine\">
      <Declaration><![CDATA[METHOD PROTECTED MS_Reset
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF M_ResetParameters() THEN
	eFileLoggerState := FILE_LOGGER_METHOD_DONE;
	
END_IF
]]></ST>
      </Implementation>
    </Method>
    <Method Name="MS_SelectPath" Id="{31527fe9-1a18-49f7-a445-a7f0f6f37fd6}" FolderPath="StateMachine\">
      <Declaration><![CDATA[METHOD MS_SelectPath : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF M_SetNewPath() THEN
	eFileLoggerState := FILE_LOGGER_METHOD_DONE;
	
END_IF
]]></ST>
      </Implementation>
    </Method>
    <Method Name="MS_Uninitialized" Id="{c8bda79c-a07f-4294-8627-cbac999b51f2}" FolderPath="StateMachine\">
      <Declaration><![CDATA[METHOD PROTECTED MS_Uninitialized 
]]></Declaration>
      <Implementation>
        <ST><![CDATA[;]]></ST>
      </Implementation>
    </Method>
    <Property Name="Name" Id="{3f164171-070b-4758-bb2a-d0472cdfad04}" FolderPath="Properties\Parameters\">
      <Declaration><![CDATA[PROPERTY Name : STRING]]></Declaration>
      <Get Name="Get" Id="{edd498cf-8150-4c69-a4fe-2c56bcd59afc}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Name := sName;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{5988a6ab-4d85-4e2f-8a21-f9787da9c4bc}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[sName := Name;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Method Name="StateMachine" Id="{77a3f6a1-01fe-4e2e-902a-b7b1739ef767}" FolderPath="StateMachine\">
      <Declaration><![CDATA[METHOD PROTECTED StateMachine
]]></Declaration>
      <Implementation>
        <ST><![CDATA[CASE eFileLoggerState OF
	FILE_LOGGER_UNINITIALIZED:
		MS_Uninitialized();
		
	FILE_LOGGER_INITIALIZING:
		MS_Initializing();
		
	FILE_LOGGER_IDLE:
		MS_Idle();
		
	FILE_LOGGER_ADD_LOGS:
		MS_AddLogs();	
		
	FILE_LOGGER_RESET:
		MS_Reset();
		
	FILE_LOGGER_METHOD_DONE:
		MS_MethodDone();
	
	FILE_LOGGER_ABORTING:
		MS_Aborting();
	
END_CASE]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_FileLogger">
      <LineId Id="145" Count="0" />
      <LineId Id="147" Count="3" />
      <LineId Id="204" Count="0" />
      <LineId Id="151" Count="1" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_FileLogger.Active.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_FileLogger.AmsNetId.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_FileLogger.AmsNetId.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_FileLogger.Busy.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_FileLogger.Error.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_FileLogger.ErrorID.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_FileLogger.FileDir.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_FileLogger.FileDir.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_FileLogger.FileName.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_FileLogger.FileName.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_FileLogger.M_ResetParameters">
      <LineId Id="59" Count="3" />
      <LineId Id="64" Count="7" />
      <LineId Id="76" Count="2" />
      <LineId Id="86" Count="4" />
      <LineId Id="92" Count="0" />
      <LineId Id="7" Count="0" />
    </LineIds>
    <LineIds Name="FB_FileLogger.M_SetNewPath">
      <LineId Id="21" Count="0" />
      <LineId Id="23" Count="0" />
      <LineId Id="43" Count="0" />
      <LineId Id="31" Count="0" />
      <LineId Id="33" Count="0" />
      <LineId Id="35" Count="0" />
      <LineId Id="29" Count="0" />
      <LineId Id="27" Count="0" />
      <LineId Id="48" Count="0" />
      <LineId Id="40" Count="0" />
      <LineId Id="39" Count="0" />
      <LineId Id="24" Count="0" />
      <LineId Id="19" Count="0" />
    </LineIds>
    <LineIds Name="FB_FileLogger.MR_Abort">
      <LineId Id="3" Count="1" />
      <LineId Id="12" Count="0" />
      <LineId Id="5" Count="5" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_FileLogger.MR_AddLogs">
      <LineId Id="3" Count="2" />
      <LineId Id="41" Count="0" />
      <LineId Id="7" Count="2" />
      <LineId Id="34" Count="2" />
      <LineId Id="42" Count="0" />
      <LineId Id="45" Count="0" />
      <LineId Id="37" Count="0" />
      <LineId Id="33" Count="0" />
      <LineId Id="11" Count="4" />
      <LineId Id="31" Count="0" />
      <LineId Id="2" Count="0" />
      <LineId Id="30" Count="0" />
      <LineId Id="29" Count="0" />
    </LineIds>
    <LineIds Name="FB_FileLogger.MR_FirstCycle">
      <LineId Id="3" Count="2" />
      <LineId Id="2" Count="0" />
      <LineId Id="13" Count="1" />
      <LineId Id="25" Count="0" />
      <LineId Id="24" Count="0" />
    </LineIds>
    <LineIds Name="FB_FileLogger.MR_Init">
      <LineId Id="3" Count="0" />
      <LineId Id="23" Count="1" />
      <LineId Id="29" Count="0" />
      <LineId Id="5" Count="4" />
      <LineId Id="2" Count="0" />
      <LineId Id="12" Count="0" />
    </LineIds>
    <LineIds Name="FB_FileLogger.MR_Reset">
      <LineId Id="3" Count="1" />
      <LineId Id="15" Count="0" />
      <LineId Id="7" Count="3" />
      <LineId Id="12" Count="1" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_FileLogger.MR_SelectPath">
      <LineId Id="35" Count="0" />
      <LineId Id="46" Count="1" />
      <LineId Id="36" Count="7" />
      <LineId Id="33" Count="0" />
    </LineIds>
    <LineIds Name="FB_FileLogger.MS_Aborting">
      <LineId Id="3" Count="8" />
      <LineId Id="45" Count="0" />
      <LineId Id="12" Count="3" />
      <LineId Id="19" Count="17" />
      <LineId Id="41" Count="2" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_FileLogger.MS_AddLogs">
      <LineId Id="3" Count="23" />
      <LineId Id="28" Count="20" />
      <LineId Id="50" Count="12" />
      <LineId Id="64" Count="7" />
      <LineId Id="84" Count="0" />
      <LineId Id="72" Count="6" />
      <LineId Id="82" Count="0" />
      <LineId Id="79" Count="0" />
      <LineId Id="83" Count="0" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_FileLogger.MS_Idle">
      <LineId Id="3" Count="1" />
      <LineId Id="6" Count="0" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_FileLogger.MS_Initializing">
      <LineId Id="3" Count="9" />
      <LineId Id="102" Count="0" />
      <LineId Id="13" Count="7" />
      <LineId Id="101" Count="0" />
      <LineId Id="21" Count="11" />
      <LineId Id="84" Count="0" />
      <LineId Id="91" Count="0" />
      <LineId Id="85" Count="0" />
      <LineId Id="33" Count="0" />
      <LineId Id="100" Count="0" />
      <LineId Id="87" Count="1" />
      <LineId Id="99" Count="0" />
      <LineId Id="89" Count="0" />
      <LineId Id="35" Count="4" />
      <LineId Id="98" Count="0" />
      <LineId Id="40" Count="13" />
      <LineId Id="94" Count="0" />
      <LineId Id="54" Count="4" />
      <LineId Id="95" Count="0" />
      <LineId Id="59" Count="11" />
      <LineId Id="96" Count="0" />
      <LineId Id="71" Count="4" />
      <LineId Id="97" Count="0" />
      <LineId Id="76" Count="2" />
      <LineId Id="93" Count="0" />
      <LineId Id="80" Count="0" />
      <LineId Id="82" Count="0" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_FileLogger.MS_MethodDone">
      <LineId Id="3" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="8" Count="0" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_FileLogger.MS_Ready">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_FileLogger.MS_Reset">
      <LineId Id="44" Count="3" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_FileLogger.MS_SelectPath">
      <LineId Id="155" Count="1" />
      <LineId Id="158" Count="0" />
      <LineId Id="157" Count="0" />
      <LineId Id="154" Count="0" />
    </LineIds>
    <LineIds Name="FB_FileLogger.MS_Uninitialized">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_FileLogger.Name.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_FileLogger.Name.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_FileLogger.StateMachine">
      <LineId Id="3" Count="12" />
      <LineId Id="19" Count="8" />
      <LineId Id="2" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>